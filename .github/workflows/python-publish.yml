# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build_package:

    runs-on: macos-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        fetch-tags: true
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      # run: python -m build  # use the following to get automatic versioning
      run: python -m build --sdist && python -m build --wheel
    - uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/*.tar.gz

  upload_package:

    runs-on: ubuntu-latest
    needs: build_package

    environment:
      name: pypi
      url: https://pypi.org/p/ditalini
    permissions:
      id-token: write
    
    steps:
      
    - uses: actions/setup-python@v5
    - uses: actions/download-artifact@v4
      with:
        path: dist
        merge-multiple: true
    - name: Display structure of downloaded files
      run: ls -R dist/
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}